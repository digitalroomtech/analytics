input ClickReportPayload {
    events: [String]!
    from: String!
    to: String!
    tenantId: ID
}

input SectionReportPayload {
    from: String!
    to: String!
    tenantId: ID
}

type ClickReportResponse {
    name: String
    count: Int
}

type SectionReportResponse {
    name: String
    count: Int
}


input RegisteredUserReportPayload {
    from: String!
    to: String!
    tenantId: ID
}

input VisitPageByUsersPayload {
    from: String!
    to: String!
    tenantId: ID
}

type RegisteredUserReportResponse {
    total_users_registered: Int
    total_user_anonymous: Int
}

type VisitPageByUserResponse {
    total_users_registered: Int
    total_user_anonymous: Int
}

input HeatMapPayload {
    from: String!
    to: String!
    tenantId: ID
    event:String
}
type HeatMapDateTime {
    date: String
    time: String
}
type HeatMapResponse {
    date_time: HeatMapDateTime
    count: Int
}

input UrlVisitPayload {
    from: String!
    to: String!
    tenantId: ID
    skip: Int
}
type UrlVisitDataResponse {
    url: String
    count: Int
}

type UrlVisitResponse{
    data: [UrlVisitDataResponse]
    total: Int
}

input UserByMonthPayload {
    from: String!
    to: String!
    tenantId: ID!
}
type UserByMonthResponse {
    date: String
    count: Int
}

type SwgTapResponse {
    total_swg_in_home: Int
    total_swg_in_other_section: Int
}

input SwgTapPayload {
    from: String!
    to: String!
    tenantId: ID
}

type SwgTapBySectionReportResponse {
    name: String
    count: Int
}

input SwgTapBySectionReportPayload {
    from: String!
    to: String!
    tenantId: ID
}

input SwgTapByMonthPayload {
    from: String!
    to: String!
    tenantId: ID!
    period:String
}

type SwgTapByMonthResponse {
    date: String
    count: Int
}

input SwgTapByUrlPayload {
    from: String!
    to: String!
    tenantId: ID
    section:String
    skip: Int
}


input SwgTapByUrlMetricPayload {
    from: String!
    to: String!
    tenantId: ID
    section:String
}

type SwgTapByUrlDataResponse {
    url: String
    count: Int
}

type SwgTapByUrlResponse{
    data: [SwgTapByUrlDataResponse]
    total: Int
}

type SwgTapByUrlDataMetricResponse {
    url: String
    count: Int
}

type SwgTapByUrlMetricResponse{
    data: [SwgTapByUrlDataMetricResponse]
}

type Query {
    getClickedReport(where: ClickReportPayload): [ClickReportResponse]
    sectionReport(where: SectionReportPayload): [SectionReportResponse]
    swgTapBySectionReport(where: SwgTapBySectionReportPayload): [SwgTapBySectionReportResponse]
    getRegisteredUserReport(where: RegisteredUserReportPayload): RegisteredUserReportResponse
    visitPageByUsers(where: VisitPageByUsersPayload): VisitPageByUserResponse
    getHeatMapReport(where: HeatMapPayload): [HeatMapResponse]
    getUrlVisitReport(where: UrlVisitPayload):UrlVisitResponse
    getUsersByMonthReport(where: UserByMonthPayload): [UserByMonthResponse]
    getSwgTap(where:SwgTapPayload):SwgTapResponse

    swgTapByMonthReport(where: SwgTapByMonthPayload): [SwgTapByMonthResponse]

    swgTapByUrlReport(where: SwgTapByUrlPayload): SwgTapByUrlResponse
    swgTapByUrlReportMetric(where: SwgTapByUrlMetricPayload): SwgTapByUrlMetricResponse

}
